<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="coinweb.dao.WalletDAO">

	<insert id="getInsertResult">
		insert all into wallet values(#{param1},'won',30000000,0,30000000,'on')
					into wallet values(#{param1},'BTC',0,0,0,'on')
					into wallet values(#{param1},'BCH',0,0,0,'on')
					into wallet values(#{param1},'ETH',0,0,0,'on')
					into wallet values(#{param1},'ETC',0,0,0,'on')
					into wallet values(#{param1},'XRP',0,0,0,'on')
					into wallet values(#{param1},'DASH',0,0,0,'on')
					into wallet values(#{param1},'LTC',0,0,0,'on')
					into wallet values(#{param1},'XMR',0,0,0,'on')
					into wallet values(#{param1},'ZEC',0,0,0,'on')
					into wallet values(#{param1},'QTUM',0,0,0,'on') SELECT * FROM DUAL
	</insert>

	<select id="getWalletResult" resultType="coinweb.vo.WalletVO">
		select won.available_balance, won.using_balance, won.tot_balance,
				coin.coin_name, coin.available_balance as coin_avail, coin.using_balance as coin_using, coin.tot_balance as coin_tot, coin.state
				from wallet won, wallet coin where won.id=#{param1} and won.id=coin.id and won.coin_name='won' and coin.coin_name=#{param2}	
	</select>
	
	<update id="getWalletUpdate">
		update wallet set
		<choose>
		 <when test="param5 != null and (param5 eq 'B'.toString())">
		 	using_balance=using_balance+(#{param3}*#{param4}) where id=#{param1} and coin_name='won'
		 </when>
		 <when test="param5 != null and (param5 eq 'S'.toString())">
		 	using_balance=using_balance+#{param4} where id=#{param1} and coin_name=#{param2}
		 </when>
		</choose>
	</update>
	
	<update id="getWalletCancel">
		update wallet set 
		<choose>
		 <when test="type != null and (type eq 'B'.toString())">
		 	using_balance=using_balance-((#{price}*#{amount})-#{price_completed}) where id=#{id} and coin_name='won'
		 </when>
		 <when test="type != null and (type eq 'S'.toString())">
		 	using_balance=using_balance-(#{amount}-#{amount_completed}) where id=#{id} and coin_name=#{coin}
		 </when>
		</choose>
	</update>
	
	<update id="getOrderingUpdate">
		update wallet set 
		<choose>
		 <when test="param5 != null and (param5 eq 'B'.toString())">
		 	available_balance=available_balance-#{param3}, using_balance=using_balance-#{param3} where id=#{param1} and coin_name='won'
		 </when>
		 <when test="param5 != null and (param5 eq 'S'.toString())">
		 	available_balance=available_balance-#{param4}, using_balance=using_balance-#{param4}, tot_balance=tot_balance-#{param4} where id=#{param1} and coin_name=#{param2}
		 </when>
		</choose>
	</update>
	
	<update id="getOrderingUpdate2">
		update wallet set 
		<choose>
		 <when test="param5 != null and (param5 eq 'B'.toString())">
		 	available_balance=available_balance+#{param4}, tot_balance=tot_balance+#{param4} where id=#{param1} and coin_name=#{param2}
		 </when>
		 <when test="param5 != null and (param5 eq 'S'.toString())">
		 	available_balance=available_balance+#{param3} where id=#{param1} and coin_name='won'
		 </when>
		</choose>
	</update>
</mapper>    